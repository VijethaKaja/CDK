Day1:

Source Code Vs Object Code
>Source code is generated by humans and is the human-readable representation
>Object code is code generated by a compiler or other translator

Using Compiler With Flags
>Debug mode in  eclipse can be used to identify breakpoints 
>It will let us check the contents of variables while compilation.

Keywords and Variables
>Keywords are set of reserved words in a programming language.
>A variable in is a storage place which has some memory allocated to it.

Variable Scope , Lifetime , initial value , modifier
>Variables are accessible within the scope in which it is declared.
>It the time period in which the variable is residing in the program memory.
>If we do not initialize a variable with some value then default value is assigned to it by the compiler.
>The amount of memory space to be allocated for a variable is derived by modifiers.
 
 Programming Constructs (Selection constructs and Loop constructs)
 >Selection constructs are used to execute the statements if certain conditions hold true . e.g if,else,switch
 >Loop constructs are used for multiple executions of a code block for a certain condition. e.g for,do-while,while
    
Declare Array
>Array is the collection of elements of a similar datatype. 
>Array can be declared as int arr[10]
    
Store Data in Array and Process Elements
>It can be done by directly giving the index of the array
>we can traverse the array to process the elements.
 
 Day2:
         
Pointers , Declare and Initialize Pointers
>Pointer is a reference to an address
>pointers can be declared as int *p
>Pointer Initialization is the process of assigning address of a variable to a pointer variable.
       
Functions definitions/invocations
>Functions are a block of code which performs a specific task
>Function Invocation is used to executes the function code

Call functions by passing value and passing reference
>Functions can have parameters and both values and references can be passed as an argument to the function
>If the values are passed then changes are not reflected in the actual variables but when references are passed then changes made in the functions are also reflected outside the function.

Dynamic Memory allocation/deallocation
>When memory is allocated at the runtime of a program then it is termed as the dynamic memory allocation
>once the variable or objects goes out of scope then it is deleted from the memory and the memory held by it is freed this process is called as memory deallocation.
       
Memory Leakage
> memory leak is a scenario that occurs when objects are no longer being used by the application, but the Garbage Collector is unable to remove them from working memory because they're still being referenced.
     
User Defined Structures
>User defined structures are a collection of elements of different datatypes like class , structures and unions
     
Access Data Members
>Data members can be accessed by the member functions and getters and setters.
   
Dynamic Memory Allocation for user defined structures
 >Memory can be allocated to the objects using the constructors and default values or specified values are initialized for the data members.

Array of Pointers
>Array of pointers is an indexed set of variables, where the variables are pointers

Iterate over array of Pointers
>Array of pointers can be iterated using the for loop.

Day3:

LinkedList
>Linkedlist is a linear data structure
>It is sequential
>It supports dynamic memory allocation

Stacks 
>Stack is a linear data structure
>It is sequential
>It supports dynamic memory allocation and static memory allocation

Queues
>Queue is a linear data structure
>It is sequential
>It supports dynamic memory allocation and static memory allocation

Binary Tree
>Binary trees is a hierarchical data structures 
>It is sequential 
>>It supports dynamic memory allocation
